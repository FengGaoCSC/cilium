// Code generated by go-swagger; DO NOT EDIT.

// Copyright Authors of Cilium
// SPDX-License-Identifier: Apache-2.0

package network

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetNetworkAttachmentHandlerFunc turns a function with the right signature into a get network attachment handler
type GetNetworkAttachmentHandlerFunc func(GetNetworkAttachmentParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetNetworkAttachmentHandlerFunc) Handle(params GetNetworkAttachmentParams) middleware.Responder {
	return fn(params)
}

// GetNetworkAttachmentHandler interface for that can handle valid get network attachment params
type GetNetworkAttachmentHandler interface {
	Handle(GetNetworkAttachmentParams) middleware.Responder
}

// NewGetNetworkAttachment creates a new http.Handler for the get network attachment operation
func NewGetNetworkAttachment(ctx *middleware.Context, handler GetNetworkAttachmentHandler) *GetNetworkAttachment {
	return &GetNetworkAttachment{Context: ctx, Handler: handler}
}

/*
	GetNetworkAttachment swagger:route GET /network/attachment network getNetworkAttachment

Retrieve the network attachment for a pod
*/
type GetNetworkAttachment struct {
	Context *middleware.Context
	Handler GetNetworkAttachmentHandler
}

func (o *GetNetworkAttachment) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewGetNetworkAttachmentParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}

name: Chart CI Build

on:
  # run after the image build completes
  workflow_run:
    workflows: ["Image CI Build"]
    types:
      - completed
  # allow manually triggering it as well, for existing refs
  workflow_dispatch:
    inputs:
      checkout_ref:
        description: 'Git ref to build'
        required: true

permissions:
  # To be able to access the repository with `actions/checkout`
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.event.after }}
  cancel-in-progress: true

jobs:
  push-charts:
    runs-on: ubuntu-20.04
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event.workflow_run.head_branch != '' }}
    steps:
    - name: Get triggering event ref
      id: get-ref
      run: |
        if [ "${{ inputs.checkout_ref }}" != "" ]; then
          echo ref=${{ inputs.checkout_ref }} >> $GITHUB_OUTPUT
        elif [ "${{ toJson(github.event.workflow_run.pull_requests) }}" != "[]" ]; then
          # If the workflow run was from a pull request, github.event.workflow_run.head_sha
          # is set to the commit SHA. The subsequent checkout will be in the detached HEAD
          # state, and "git rev-parse --abbrev-ref HEAD" will just print "HEAD". Set the ref
          # to pull request branch name instead so that we get the correct branch name.
          echo ref=${{ github.event.workflow_run.pull_requests[0].head.ref }} >> $GITHUB_OUTPUT
        elif [ "${{ github.event.workflow_run.head_sha }}" != "" ]; then
          echo ref=${{ github.event.workflow_run.head_sha }} >> $GITHUB_OUTPUT
        else
          echo "Invalid event type"
          exit 1
        fi
    - name: Checkout Source Code
      uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab # v3.5.2
      with:
        persist-credentials: false
        ref: ${{ steps.get-ref.outputs.ref }}
        # required for git describe
        fetch-depth: 0
    - id: get-version
      run: |
        echo "chart_version=$(./contrib/scripts/print-chart-version.sh)" | tee -a $GITHUB_OUTPUT
    - name: Push charts
      uses: isovalent/reusable-workflows/.github/actions/push-helm-chart@v0.2.0
      with:
        name: cilium
        path: install/kubernetes/cilium
        version: ${{ steps.get-version.outputs.chart_version }}
        values_file_changes: |
          {

            "image.repository": "quay.io/isovalent-dev/cilium-ci",
            "image.tag": "${{ steps.get-ref.outputs.ref }}",
            "preflight.image.repository": "quay.io/isovalent-dev/cilium-ci",
            "preflight.image.tag": "${{ steps.get-ref.outputs.ref }}",
            "operator.image.repository": "quay.io/isovalent-dev/operator",
            "operator.image.suffix": "-ci",
            "operator.image.tag": "${{ steps.get-ref.outputs.ref }}",
            "hubble.relay.image.repository": "quay.io/isovalent-dev/hubble-relay-ci",
            "hubble.relay.image.tag": "${{ steps.get-ref.outputs.ref }}",
            "clustermesh.apiserver.image.repository": "quay.io/isovalent-dev/clustermesh-apiserver-ci",
            "clustermesh.apiserver.image.tag": "${{ steps.get-ref.outputs.ref }}"
          }
        registry: quay.io
        registry_namespace: isovalent-charts-dev
        registry_username: ${{ secrets.QUAY_ISOVALENT_CHARTS_DEV_USERNAME }}
        registry_password: ${{ secrets.QUAY_ISOVALENT_CHARTS_DEV_PASSWORD }}
